{"version":3,"file":"static/js/636.ef52bcb1.chunk.js","mappings":"yOAGaA,EAAgBC,EAAAA,EAAAA,QAAH,4SAebC,EAAaD,EAAAA,EAAAA,KAAH,4EAMVE,EAAcF,EAAAA,EAAAA,MAAH,+DAKXG,EAAeH,EAAAA,EAAAA,OAAH,wLAYZI,EAAwBJ,EAAAA,EAAAA,GAAH,4DAKrBK,EAAwBL,EAAAA,EAAAA,GAAH,8FAOrBM,GAAwBN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,gK,kBCjDrBQ,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,UAACX,EAAD,CAAYQ,SATO,SAAAI,GACnBA,EAAEC,iBACiB,KAAfH,IAGJF,EAASE,EAAWI,cAAcC,QAClCJ,EAAc,IACf,EAEC,WACE,SAACV,EAAD,CACEe,KAAK,OACLC,aAAa,MACbC,KAAK,YACLC,MAAOT,EACPU,SAnByB,SAAAR,GAC7BD,EAAcC,EAAES,cAAcF,MAC/B,EAkBKG,WAAS,EACTC,YAAY,0BAEd,SAACrB,EAAD,uBAGL,E,kBC9BYsB,EAAkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC3C,OACE,SAACvB,EAAD,WACE,SAACC,EAAD,CACEuB,GAAE,UAAKF,GACPG,MAAO,CAAEC,KAAK,iBAAD,OAAmBH,IAFlC,SAIGF,KAIR,ECTYM,EAAkB,SAAC,GAAoB,IAAlBrB,EAAiB,EAAjBA,WAChC,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOuB,EAAP,KAAeC,EAAf,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACHxB,GAILuB,EAAU,IACVE,MAAM,4FAAD,OACyFzB,IAE3F0B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GACJA,EAAMC,QAAQC,KAAI,YAAoB,IAAjBhB,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OAAOO,GAAU,SAAAJ,GAAK,wBACjBA,GACA,CACD,CACEJ,MAAOA,EACPC,GAAIA,IALY,GASvB,GACF,KApBDO,EAAU,GAqBb,GAAE,CAACvB,KAGF,8BACqB,IAAlBsB,EAAOU,SACN,SAACvC,EAAD,UACG6B,EAAOS,KAAI,YAAoB,IAAjBf,EAAgB,EAAhBA,GAAID,EAAY,EAAZA,MACjB,OACE,SAACD,EAAD,CAEEC,MAAOA,EACPC,GAAIA,EACJC,MAAOjB,GAHFgB,EAMV,OAKV,ECtBD,EAtBe,WACb,IAAQiB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAQmB,EAAaE,IAAI,SAM/B,OACE,UAAClD,EAAD,YACI6C,IACA,iCACE,SAACpC,EAAD,CAAiBC,SARC,SAAAyC,GACxBF,EAAgB,CAAEpB,MAAOsB,GAC1B,KAOO,SAAClB,EAAD,CAAiBrB,WAAYiB,QAGjC,SAAC,KAAD,MAGL,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/SearchMovieForm.jsx","components/Movies/SearchMovieItem.jsx","components/Movies/SearchMovieList.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesSection = styled.section`\n  margin-top: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n  position: relative;\n  border: 1px grey solid;\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 30px;\n  text-align: center;\n`;\n\nexport const SearchForm = styled.form`\n  width: 400px;\n  display: flex;\n  height: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  margin-right: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  font-size: 20px;\n  cursor: pointer;\n  border: none;\n  background-color: #afaff0;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const SearchMovieListStyled = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\n\nexport const SearchMovieItemStyled = styled.li`\n  margin-bottom: 10px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SearchMovieStyledLink = styled(NavLink)`\n  font-weight: 600;\n  font-size: 24px;\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { SearchForm, SearchInput, SearchButton } from './Movies.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchMovieForm = ({ onSubmit }) => {\n  const [movieQuery, setMovieQuery] = useState('');\n\n  const handleMovieQueryChange = e => {\n    setMovieQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieQuery === '') {\n      return;\n    }\n    onSubmit(movieQuery.toLowerCase().trim());\n    setMovieQuery('');\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"movieName\"\n        value={movieQuery}\n        onChange={handleMovieQueryChange}\n        autoFocus\n        placeholder=\"Search movie by name\"\n      />\n      <SearchButton>Search</SearchButton>\n    </SearchForm>\n  );\n};\n\nSearchMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchMovieItemStyled, SearchMovieStyledLink } from './Movies.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchMovieItem = ({ title, id, query }) => {\n  return (\n    <SearchMovieItemStyled>\n      <SearchMovieStyledLink\n        to={`${id}`}\n        state={{ from: `/movies?query=${query}` }}\n      >\n        {title}\n      </SearchMovieStyledLink>\n    </SearchMovieItemStyled>\n  );\n};\n\nSearchMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  query: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { SearchMovieListStyled } from './Movies.styled';\nimport { SearchMovieItem } from './SearchMovieItem';\nimport PropTypes from 'prop-types';\n\nexport const SearchMovieList = ({ movieQuery }) => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!movieQuery) {\n      setMovies([]);\n      return;\n    }\n    setMovies([]);\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=2eb857a72ef08fb512c529b6c9a18227&query=${movieQuery}`\n    )\n      .then(res => res.json())\n      .then(films => {\n        films.results.map(({ title, id }) => {\n          return setMovies(state => [\n            ...state,\n            ...[\n              {\n                title: title,\n                id: id,\n              },\n            ],\n          ]);\n        });\n      });\n  }, [movieQuery]);\n\n  return (\n    <>\n      {movies.length !== 0 && (\n        <SearchMovieListStyled>\n          {movies.map(({ id, title }) => {\n            return (\n              <SearchMovieItem\n                key={id}\n                title={title}\n                id={id}\n                query={movieQuery}\n              />\n            );\n          })}\n        </SearchMovieListStyled>\n      )}\n    </>\n  );\n};\n\nSearchMovieList.propTypes = {\n  movieQuery: PropTypes.string,\n};\n","import { MoviesSection } from './Movies.styled';\nimport { SearchMovieForm } from './SearchMovieForm';\nimport { Outlet } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { SearchMovieList } from './SearchMovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const movieQueryHandler = data => {\n    setSearchParams({ query: data });\n  };\n\n  return (\n    <MoviesSection>\n      {!movieId && (\n        <>\n          <SearchMovieForm onSubmit={movieQueryHandler} />\n          <SearchMovieList movieQuery={query} />\n        </>\n      )}\n      <Outlet />\n    </MoviesSection>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesSection","styled","SearchForm","SearchInput","SearchButton","SearchMovieListStyled","SearchMovieItemStyled","SearchMovieStyledLink","NavLink","SearchMovieForm","onSubmit","useState","movieQuery","setMovieQuery","e","preventDefault","toLowerCase","trim","type","autoComplete","name","value","onChange","currentTarget","autoFocus","placeholder","SearchMovieItem","title","id","query","to","state","from","SearchMovieList","movies","setMovies","useEffect","fetch","then","res","json","films","results","map","length","movieId","useParams","useSearchParams","searchParams","setSearchParams","get","data"],"sourceRoot":""}